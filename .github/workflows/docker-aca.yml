name: Build and deploy containers to Azure Container Apps

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - '.github/workflows/**'
      - 'backend_api/**'
      - 'frontend_ui/**'

env:
  AZURE_CONTAINER_REGISTRY: cracademoalbumapp
  BACKEND_IMAGE_NAME: album-api
  FRONTEND_IMAGE_NAME: album-ui
  BACKEND_CONTAINER_APP_NAME: album-api
  FRONTEND_CONTAINER_APP_NAME: album-ui
  CONTAINERAPPS_ENVIRONMENT: ae-aca-demo
  RESOURCE_GROUP: rg-aca-demo

permissions:
  contents: read

jobs:
  build-push-container-images:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Build Backend
        run: |
          cd backend_api/backend_api_csharp
          dotnet build --configuration Release

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Build Frontend
        run: |
          cd frontend_ui
          npm install
          npm run build --if-present

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Build and push backend container image to ACR
        uses: docker/build-push-action@v6
        with:
          context: ./backend_api/backend_api_csharp
          push: true
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.BACKEND_IMAGE_NAME }}:${{ github.run_number }}
          file: ./backend_api/backend_api_csharp/Dockerfile

      - name: Build and push frontend container image to ACR
        uses: docker/build-push-action@v6
        with:
          context: ./frontend_ui
          push: true
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.FRONTEND_IMAGE_NAME }}:${{ github.run_number }}
          file: ./frontend_ui/Dockerfile

  deploy-to-container-apps:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build-push-container-images

    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Backend to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          registryUrl: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.BACKEND_IMAGE_NAME }}:${{ github.run_number }}
          targetPort: 3500
          ingress: internal
          containerAppName: ${{ env.BACKEND_CONTAINER_APP_NAME }}
          containerAppEnvironment: ${{ env.CONTAINERAPPS_ENVIRONMENT }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          environmentVariables: |
            ASPNETCORE_ENVIRONMENT=Production

      - name: Get Backend URL
        id: backend-url
        run: |
          BACKEND_URL=$(az containerapp show \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.BACKEND_CONTAINER_APP_NAME }} \
            --query properties.configuration.ingress.fqdn -o tsv)
          echo "backend_url=$BACKEND_URL" >> $GITHUB_OUTPUT

      - name: Deploy Frontend to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          registryUrl: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.FRONTEND_IMAGE_NAME }}:${{ github.run_number }}
          targetPort: 3000
          ingress: external
          containerAppName: ${{ env.FRONTEND_CONTAINER_APP_NAME }}
          containerAppEnvironment: ${{ env.CONTAINERAPPS_ENVIRONMENT }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          environmentVariables: |
            API_BASE_URL=https://${{ steps.backend-url.outputs.backend_url }}
            NODE_ENV=production

      - name: Get Application URL
        run: |
          echo "Application URL:"
          az containerapp show \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.FRONTEND_CONTAINER_APP_NAME }} \
            --query properties.configuration.ingress.fqdn -o tsv
